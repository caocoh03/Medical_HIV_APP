import React from 'react';
import {
  View,
  Text,
  ScrollView,
  TouchableOpacity,
  StyleSheet,
} from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { useNavigation } from '@react-navigation/native';
import { useThemeMode } from '../../context/ThemeContext';

const ScheduleGuideScreen = () => {
  const navigation = useNavigation();
  const { theme } = useThemeMode();

  const guideSteps = [
    {
      id: 1,
      title: "Chu·∫©n b·ªã th√¥ng tin ph√¢n ca",
      description: "Thu th·∫≠p th√¥ng tin v·ªÅ s·ªë l∆∞·ª£ng b√°c sƒ©, nhu c·∫ßu kh√°m b·ªánh v√† quy ƒë·ªãnh l√†m vi·ªác.",
      icon: "clipboard-outline",
      details: [
        "Danh s√°ch b√°c sƒ© c√≥ s·∫µn v√† chuy√™n m√¥n",
        "Nhu c·∫ßu kh√°m b·ªánh theo ng√†y trong tu·∫ßn",
        "Quy ƒë·ªãnh gi·ªù l√†m vi·ªác c·ªßa b·ªánh vi·ªán",
        "S·ªë l∆∞·ª£ng b·ªánh nh√¢n d·ª± ki·∫øn m·ªói ca"
      ]
    },
    {
      id: 2,
      title: "Truy c·∫≠p qu·∫£n l√Ω l·ªãch l√†m vi·ªác",
      description: "V√†o m√†n h√¨nh qu·∫£n l√Ω l·ªãch l√†m vi·ªác t·ª´ dashboard ch√≠nh.",
      icon: "calendar-outline",
      details: [
        "T·ª´ trang ch·ªß manager, click v√†o n√∫t 'L·ªãch l√†m vi·ªác'",
        "Ho·∫∑c v√†o menu qu·∫£n l√Ω v√† ch·ªçn 'Qu·∫£n l√Ω l·ªãch l√†m vi·ªác'",
        "M√†n h√¨nh s·∫Ω hi·ªÉn th·ªã l·ªãch l√†m vi·ªác hi·ªán t·∫°i c·ªßa t·∫•t c·∫£ b√°c sƒ©"
      ]
    },
    {
      id: 3,
      title: "Xem l·ªãch l√†m vi·ªác hi·ªán t·∫°i",
      description: "Ki·ªÉm tra l·ªãch l√†m vi·ªác hi·ªán t·∫°i ƒë·ªÉ hi·ªÉu r√µ t√¨nh h√¨nh ph√¢n ca.",
      icon: "eye-outline",
      details: [
        "Xem t·ªïng quan l·ªãch l√†m vi·ªác tu·∫ßn hi·ªán t·∫°i",
        "Ki·ªÉm tra c√°c ca tr·ªëng c·∫ßn b·ªï sung",
        "X√°c ƒë·ªãnh c√°c b√°c sƒ© c√≥ th·ªÉ tƒÉng ca",
        "ƒê√°nh gi√° hi·ªáu qu·∫£ ph√¢n ca hi·ªán t·∫°i"
      ]
    },
    {
      id: 4,
      title: "Ch·ªçn b√°c sƒ© c·∫ßn ph√¢n ca",
      description: "L·ª±a ch·ªçn b√°c sƒ© ph√π h·ª£p d·ª±a tr√™n chuy√™n m√¥n v√† kh·∫£ nƒÉng.",
      icon: "people-outline",
      details: [
        "Xem danh s√°ch b√°c sƒ© c√≥ s·∫µn",
        "Ki·ªÉm tra chuy√™n m√¥n ph√π h·ª£p v·ªõi ca",
        "Xem l·ªãch l√†m vi·ªác hi·ªán t·∫°i c·ªßa b√°c sƒ©",
        "ƒê·∫£m b·∫£o kh√¥ng b·ªã tr√πng l·ªãch"
      ]
    },
    {
      id: 5,
      title: "Thi·∫øt l·∫≠p ca l√†m vi·ªác",
      description: "T·∫°o c√°c ca l√†m vi·ªác m·ªõi ho·∫∑c c·∫≠p nh·∫≠t ca hi·ªán c√≥.",
      icon: "add-circle-outline",
      details: [
        "Ch·ªçn ng√†y trong tu·∫ßn c·∫ßn ph√¢n ca",
        "Thi·∫øt l·∫≠p th·ªùi gian b·∫Øt ƒë·∫ßu v√† k·∫øt th√∫c",
        "X√°c ƒë·ªãnh lo·∫°i ca (s√°ng, chi·ªÅu, t·ªëi)",
        "Ghi ch√∫ ƒë·∫∑c bi·ªát cho ca (n·∫øu c√≥)"
      ]
    },
    {
      id: 6,
      title: "Ph√¢n b·ªï th·ªùi gian h·ª£p l√Ω",
      description: "ƒê·∫£m b·∫£o ph√¢n b·ªï th·ªùi gian l√†m vi·ªác c√¢n b·∫±ng v√† hi·ªáu qu·∫£.",
      icon: "time-outline",
      details: [
        "Ca s√°ng: 7:00 - 12:00 (5 ti·∫øng)",
        "Ca chi·ªÅu: 13:00 - 17:00 (4 ti·∫øng)",
        "Ca t·ªëi: 18:00 - 22:00 (4 ti·∫øng)",
        "ƒê·∫£m b·∫£o ngh·ªâ tr∆∞a 1 ti·∫øng gi·ªØa ca s√°ng v√† chi·ªÅu",
        "Kh√¥ng qu√° 8 ti·∫øng/ng√†y cho m·ªói b√°c sƒ©"
      ]
    },
    {
      id: 7,
      title: "Ki·ªÉm tra tr√πng l·ªãch",
      description: "ƒê·∫£m b·∫£o kh√¥ng c√≥ xung ƒë·ªôt l·ªãch l√†m vi·ªác gi·ªØa c√°c b√°c sƒ©.",
      icon: "warning-outline",
      details: [
        "Ki·ªÉm tra tr√πng l·ªãch theo ng√†y",
        "ƒê·∫£m b·∫£o m·ªói ca ch·ªâ c√≥ 1 b√°c sƒ©",
        "Ki·ªÉm tra tr√πng l·ªãch theo chuy√™n khoa",
        "X√°c nh·∫≠n th·ªùi gian ngh·ªâ h·ª£p l√Ω"
      ]
    },
    {
      id: 8,
      title: "L∆∞u v√† x√°c nh·∫≠n l·ªãch",
      description: "L∆∞u l·ªãch l√†m vi·ªác v√† th√¥ng b√°o cho b√°c sƒ©.",
      icon: "checkmark-circle-outline",
      details: [
        "Xem l·∫°i to√†n b·ªô l·ªãch tr∆∞·ªõc khi l∆∞u",
        "L∆∞u l·ªãch l√†m vi·ªác m·ªõi",
        "G·ª≠i th√¥ng b√°o cho b√°c sƒ© li√™n quan",
        "C·∫≠p nh·∫≠t l·ªãch t·ªïng quan"
      ]
    }
  ];

  const scheduleTypes = [
    {
      type: "Ca s√°ng",
      time: "7:00 - 12:00",
      duration: "5 ti·∫øng",
      description: "Ca ch√≠nh, th∆∞·ªùng c√≥ nhi·ªÅu b·ªánh nh√¢n nh·∫•t",
      icon: "sunny-outline"
    },
    {
      type: "Ca chi·ªÅu", 
      time: "13:00 - 17:00",
      duration: "4 ti·∫øng",
      description: "Ca ph·ª•, th∆∞·ªùng √≠t b·ªánh nh√¢n h∆°n ca s√°ng",
      icon: "partly-sunny-outline"
    },
    {
      type: "Ca t·ªëi",
      time: "18:00 - 22:00", 
      duration: "4 ti·∫øng",
      description: "Ca c·∫•p c·ª©u v√† kh√°m ngo√†i gi·ªù",
      icon: "moon-outline"
    }
  ];

  const importantRules = [
    "M·ªói b√°c sƒ© kh√¥ng ƒë∆∞·ª£c l√†m qu√° 8 ti·∫øng/ng√†y",
    "Ph·∫£i c√≥ √≠t nh·∫•t 1 b√°c sƒ© m·ªói chuy√™n khoa trong m·ªói ca",
    "B√°c sƒ© m·ªõi kh√¥ng ƒë∆∞·ª£c ph√¢n ca t·ªëi trong 3 th√°ng ƒë·∫ßu",
    "Ph·∫£i c√≥ √≠t nh·∫•t 1 b√°c sƒ© tr·ª±c c·∫•p c·ª©u 24/7",
    "Ngh·ªâ tr∆∞a b·∫Øt bu·ªôc 1 ti·∫øng gi·ªØa ca s√°ng v√† chi·ªÅu",
    "Kh√¥ng ƒë∆∞·ª£c ph√¢n ca li√™n t·ª•c qu√° 6 ng√†y"
  ];

  const commonIssues = [
    {
      issue: "Kh√¥ng th·ªÉ th√™m ca m·ªõi",
      solution: "Ki·ªÉm tra xem b√°c sƒ© ƒë√£ c√≥ l·ªãch trong th·ªùi gian ƒë√≥ ch∆∞a"
    },
    {
      issue: "L·ªãch b·ªã tr√πng",
      solution: "S·ª≠ d·ª•ng t√≠nh nƒÉng ki·ªÉm tra tr√πng l·ªãch tr∆∞·ªõc khi l∆∞u"
    },
    {
      issue: "B√°c sƒ© kh√¥ng nh·∫≠n ƒë∆∞·ª£c th√¥ng b√°o",
      solution: "Ki·ªÉm tra th√¥ng tin li√™n h·ªá v√† g·ª≠i l·∫°i th√¥ng b√°o"
    },
    {
      issue: "L·ªãch kh√¥ng hi·ªÉn th·ªã ƒë√∫ng",
      solution: "Refresh trang v√† ki·ªÉm tra m√∫i gi·ªù h·ªá th·ªëng"
    }
  ];

  const bestPractices = [
    "Ph√¢n ca theo chuy√™n m√¥n v√† kinh nghi·ªám",
    "ƒê·∫£m b·∫£o c√¢n b·∫±ng kh·ªëi l∆∞·ª£ng c√¥ng vi·ªác",
    "∆Øu ti√™n b√°c sƒ© c√≥ kinh nghi·ªám cho ca t·ªëi",
    "T·∫°o l·ªãch d·ª± ph√≤ng cho tr∆∞·ªùng h·ª£p kh·∫©n c·∫•p",
    "Th∆∞·ªùng xuy√™n c·∫≠p nh·∫≠t v√† ƒëi·ªÅu ch·ªânh l·ªãch",
    "L·∫Øng nghe ph·∫£n h·ªìi t·ª´ b√°c sƒ© v·ªÅ l·ªãch l√†m vi·ªác"
  ];

  return (
    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>
      {/* Header */}
      <View style={[styles.header, { backgroundColor: theme.colors.surface }]}>
        <TouchableOpacity
          onPress={() => navigation.goBack()}
          style={styles.backButton}
        >
          <Ionicons name="arrow-back" size={24} color={theme.colors.text} />
        </TouchableOpacity>
        <Text style={[styles.headerTitle, { color: theme.colors.text }]}>
          Quy tr√¨nh ph√¢n ca
        </Text>
        <View style={styles.headerRight} />
      </View>

      <ScrollView style={styles.content}>
        {/* Introduction */}
        <View style={[styles.introSection, { backgroundColor: theme.colors.surface }]}>
          <View style={styles.introHeader}>
            <Ionicons name="calendar" size={32} color={theme.colors.primary} />
            <Text style={[styles.introTitle, { color: theme.colors.text }]}>
              H∆∞·ªõng d·∫´n ph√¢n ca chi ti·∫øt
            </Text>
          </View>
          <Text style={[styles.introDescription, { color: theme.colors.textSecondary }]}>
            H∆∞·ªõng d·∫´n t·ª´ng b∆∞·ªõc c√°ch ph√¢n ca l√†m vi·ªác cho b√°c sƒ© m·ªôt c√°ch hi·ªáu qu·∫£ v√† c√¥ng b·∫±ng. 
            ƒê·∫£m b·∫£o ƒë√°p ·ª©ng nhu c·∫ßu kh√°m b·ªánh v√† t·ªëi ∆∞u h√≥a ngu·ªìn l·ª±c y t·∫ø.
          </Text>
        </View>

        {/* Schedule Types */}
        <View style={styles.typesSection}>
          <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>
            üïê C√°c lo·∫°i ca l√†m vi·ªác
          </Text>
          
          {scheduleTypes.map((schedule, index) => (
            <View key={index} style={[styles.typeCard, { backgroundColor: theme.colors.surface }]}>
              <View style={styles.typeHeader}>
                <View style={[styles.typeIcon, { backgroundColor: theme.colors.primary + '15' }]}>
                  <Ionicons name={schedule.icon} size={20} color={theme.colors.primary} />
                </View>
                <View style={styles.typeInfo}>
                  <Text style={[styles.typeTitle, { color: theme.colors.text }]}>
                    {schedule.type}
                  </Text>
                  <Text style={[styles.typeTime, { color: theme.colors.primary }]}>
                    {schedule.time} ({schedule.duration})
                  </Text>
                </View>
              </View>
              <Text style={[styles.typeDescription, { color: theme.colors.textSecondary }]}>
                {schedule.description}
              </Text>
            </View>
          ))}
        </View>

        {/* Guide Steps */}
        <View style={styles.stepsSection}>
          <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>
            üìã C√°c b∆∞·ªõc th·ª±c hi·ªán
          </Text>
          
          {guideSteps.map((step, index) => (
            <View key={step.id} style={[styles.stepCard, { backgroundColor: theme.colors.surface }]}>
              <View style={styles.stepHeader}>
                <View style={[styles.stepNumber, { backgroundColor: theme.colors.primary }]}>
                  <Text style={styles.stepNumberText}>{step.id}</Text>
                </View>
                <View style={styles.stepInfo}>
                  <View style={styles.stepTitleContainer}>
                    <Ionicons name={step.icon} size={20} color={theme.colors.primary} />
                    <Text style={[styles.stepTitle, { color: theme.colors.text }]}>
                      {step.title}
                    </Text>
                  </View>
                  <Text style={[styles.stepDescription, { color: theme.colors.textSecondary }]}>
                    {step.description}
                  </Text>
                </View>
              </View>
              
              <View style={styles.stepDetails}>
                <Text style={[styles.detailsTitle, { color: theme.colors.text }]}>
                  Chi ti·∫øt th·ª±c hi·ªán:
                </Text>
                {step.details.map((detail, detailIndex) => (
                  <View key={detailIndex} style={styles.detailItem}>
                    <Ionicons name="checkmark-circle" size={16} color={theme.colors.primary} />
                    <Text style={[styles.detailText, { color: theme.colors.textSecondary }]}>
                      {detail}
                    </Text>
                  </View>
                ))}
              </View>
            </View>
          ))}
        </View>

        {/* Important Rules */}
        <View style={[styles.rulesSection, { backgroundColor: theme.colors.surface }]}>
          <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>
            ‚öñÔ∏è Quy t·∫Øc quan tr·ªçng
          </Text>
          {importantRules.map((rule, index) => (
            <View key={index} style={styles.ruleItem}>
              <Ionicons name="shield-checkmark" size={16} color="#4CAF50" />
              <Text style={[styles.ruleText, { color: theme.colors.textSecondary }]}>
                {rule}
              </Text>
            </View>
          ))}
        </View>

        {/* Best Practices */}
        <View style={[styles.practicesSection, { backgroundColor: theme.colors.surface }]}>
          <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>
            üí° Th·ª±c h√†nh t·ªët nh·∫•t
          </Text>
          {bestPractices.map((practice, index) => (
            <View key={index} style={styles.practiceItem}>
              <Ionicons name="bulb" size={16} color="#FFC107" />
              <Text style={[styles.practiceText, { color: theme.colors.textSecondary }]}>
                {practice}
              </Text>
            </View>
          ))}
        </View>

        {/* Common Issues */}
        <View style={[styles.issuesSection, { backgroundColor: theme.colors.surface }]}>
          <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>
            üîß X·ª≠ l√Ω s·ª± c·ªë th∆∞·ªùng g·∫∑p
          </Text>
          {commonIssues.map((issue, index) => (
            <View key={index} style={styles.issueItem}>
              <View style={styles.issueHeader}>
                <Ionicons name="help-circle" size={16} color="#2196F3" />
                <Text style={[styles.issueTitle, { color: theme.colors.text }]}>
                  {issue.issue}
                </Text>
              </View>
              <Text style={[styles.issueSolution, { color: theme.colors.textSecondary }]}>
                {issue.solution}
              </Text>
            </View>
          ))}
        </View>

        {/* Contact Support */}
        <View style={[styles.supportSection, { backgroundColor: theme.colors.primary + '15' }]}>
          <Ionicons name="headset" size={24} color={theme.colors.primary} />
          <Text style={[styles.supportTitle, { color: theme.colors.primary }]}>
            C·∫ßn h·ªó tr·ª£ th√™m?
          </Text>
          <Text style={[styles.supportText, { color: theme.colors.textSecondary }]}>
            N·∫øu g·∫∑p kh√≥ khƒÉn trong qu√° tr√¨nh ph√¢n ca, vui l√≤ng li√™n h·ªá:
          </Text>
          <View style={styles.contactInfo}>
            <Text style={[styles.contactText, { color: theme.colors.textSecondary }]}>
              üìß Email: schedule@hiv-hospital.com
            </Text>
            <Text style={[styles.contactText, { color: theme.colors.textSecondary }]}>
              üìû Hotline: 1900-1234
            </Text>
            <Text style={[styles.contactText, { color: theme.colors.textSecondary }]}>
              üïí Th·ªùi gian: 8:00 - 17:00 (Th·ª© 2 - Th·ª© 6)
            </Text>
          </View>
        </View>
      </ScrollView>

      {/* Fixed Home Button */}
      <TouchableOpacity
        style={[styles.homeButton, { backgroundColor: theme.colors.primary }]}
        onPress={() => navigation.navigate('ManagerHomeScreen')}
      >
        <Ionicons name="home" size={24} color="#fff" />
        <Text style={styles.homeButtonText}>Trang ch·ªß</Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 20,
    paddingVertical: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#e0e0e0',
  },
  backButton: {
    padding: 8,
  },
  headerTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    flex: 1,
    textAlign: 'center',
  },
  headerRight: {
    width: 40,
  },
  content: {
    flex: 1,
    padding: 20,
  },
  introSection: {
    borderRadius: 12,
    padding: 20,
    marginBottom: 20,
  },
  introHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12,
  },
  introTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    marginLeft: 12,
  },
  introDescription: {
    fontSize: 16,
    lineHeight: 24,
  },
  typesSection: {
    marginBottom: 20,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 16,
  },
  typeCard: {
    borderRadius: 12,
    padding: 16,
    marginBottom: 12,
    borderWidth: 1,
    borderColor: '#e0e0e0',
  },
  typeHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 8,
  },
  typeIcon: {
    width: 40,
    height: 40,
    borderRadius: 20,
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 12,
  },
  typeInfo: {
    flex: 1,
  },
  typeTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    marginBottom: 2,
  },
  typeTime: {
    fontSize: 14,
    fontWeight: '600',
  },
  typeDescription: {
    fontSize: 14,
    lineHeight: 20,
  },
  stepsSection: {
    marginBottom: 20,
  },
  stepCard: {
    borderRadius: 12,
    padding: 16,
    marginBottom: 16,
    borderWidth: 1,
    borderColor: '#e0e0e0',
  },
  stepHeader: {
    flexDirection: 'row',
    marginBottom: 12,
  },
  stepNumber: {
    width: 32,
    height: 32,
    borderRadius: 16,
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 12,
  },
  stepNumberText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
  stepInfo: {
    flex: 1,
  },
  stepTitleContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 4,
  },
  stepTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    marginLeft: 8,
  },
  stepDescription: {
    fontSize: 14,
    lineHeight: 20,
  },
  stepDetails: {
    marginTop: 8,
  },
  detailsTitle: {
    fontSize: 14,
    fontWeight: '600',
    marginBottom: 8,
  },
  detailItem: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 6,
  },
  detailText: {
    fontSize: 13,
    marginLeft: 8,
    flex: 1,
  },
  rulesSection: {
    borderRadius: 12,
    padding: 16,
    marginBottom: 20,
  },
  ruleItem: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 8,
  },
  ruleText: {
    fontSize: 14,
    marginLeft: 8,
    flex: 1,
  },
  practicesSection: {
    borderRadius: 12,
    padding: 16,
    marginBottom: 20,
  },
  practiceItem: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 8,
  },
  practiceText: {
    fontSize: 14,
    marginLeft: 8,
    flex: 1,
  },
  issuesSection: {
    borderRadius: 12,
    padding: 16,
    marginBottom: 20,
  },
  issueItem: {
    marginBottom: 16,
  },
  issueHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 4,
  },
  issueTitle: {
    fontSize: 14,
    fontWeight: '600',
    marginLeft: 8,
  },
  issueSolution: {
    fontSize: 13,
    marginLeft: 24,
    lineHeight: 18,
  },
  supportSection: {
    borderRadius: 12,
    padding: 20,
    alignItems: 'center',
    marginBottom: 20,
  },
  supportTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginTop: 12,
    marginBottom: 8,
  },
  supportText: {
    fontSize: 14,
    textAlign: 'center',
    marginBottom: 16,
  },
  contactInfo: {
    alignItems: 'center',
  },
  contactText: {
    fontSize: 14,
    marginBottom: 4,
  },
  homeButton: {
    position: 'absolute',
    bottom: 20,
    right: 20,
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 16,
    paddingVertical: 12,
    borderRadius: 25,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.25,
    shadowRadius: 4,
    elevation: 5,
  },
  homeButtonText: {
    color: '#fff',
    fontSize: 14,
    fontWeight: '600',
    marginLeft: 8,
  },
});

export default ScheduleGuideScreen; 